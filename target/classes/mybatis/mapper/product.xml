<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<insert id="insertProduct" parameterType="product">
    	INSERT 
		  INTO PRODUCT 
		       ( 
		           PROD_CODE, 
		           PROD_DATE, 
		           PROD_GUBN, 
		           CORP_CODE, 
		           PROD_CNO, 
		           PROD_NAME, 
		           PROD_NO, 
		           PROD_GYU, 
		           PROD_JAI, 
		           PROD_DANW, 
		           PROD_DANJ, 
		           PROD_DANG, 
		           TECH_NO, 
		           PROD_PG, 
		           PROD_PG1, 
		           PROD_PG2, 
		           PROD_SG, 
		           PROD_SG1, 
		           PROD_SG2, 
		           PROD_GD1, 
		           PROD_GD2, 
		           PROD_GD3, 
		           PROD_GD4, 
		           PROD_GD5, 
		           PROD_E1, 
		           PROD_E2, 
		           PROD_NOTE, 
		           PROD_MODEL, 
		           PROD_DANCH, 
		           PROD_PLT, 
		           PROD_BOX, 
		           PROD_SNP, 
		           PROD_BANGCH, 
		           PROD_VNYL, 
		           PROD_PAD, 
		           PROD_UPJONG,
		           PROD_REALJAI,
		           TECH_SEQ,
		           TECH_PATTERN,
		           PROD_GJ,
		           PROD_BH 
		       ) 
		       VALUES 
		       ( 
		              (SELECT ISNULL(MAX(PROD_CODE), 0)+1 
		                FROM PRODUCT 
		              ), 
		              #{prod_date}, 
		              #{prod_gubn}, 
		              #{corp_code}, 
		              #{prod_cno}, 
		              #{prod_name}, 
		              #{prod_no}, 
		              #{prod_gyu}, 
		              #{prod_jai}, 
		              #{prod_danw} , 
		              #{prod_danj}, 
		              #{prod_dang}, 
		              #{tech_no}, 
		              #{prod_pg}, 
		              #{prod_pg1}, 
		              #{prod_pg2}, 
		              #{prod_sg}, 
		              #{prod_sg1}, 
		              #{prod_sg2}, 
		              #{prod_gd1} , 
		              #{prod_gd2}, 
		              #{prod_gd3}, 
		              #{prod_gd4}, 
		              #{prod_gd5}, 
		              #{prod_e1}, 
		              #{prod_e2}, 
		              #{prod_note}, 
		              #{prod_model}, 
		              #{prod_danch}, 
		              #{prod_plt}, 
		              #{prod_box}, 
		              #{prod_snp}, 
		              #{prod_bangch}, 
		              #{prod_vnyl}, 
		              #{prod_pad},
		              #{prod_upjong}, 
		              #{prod_realjai},
		              #{tech_seq}, 
		              #{tech_pattern}, 
		              #{prod_gJ}, 
		              #{prod_bh} 
		          )
	</insert>
	
	
	<select id="getProductList" parameterType="product" resultType="product">
		SET ANSI_WARNINGS OFF

		SET ARITHIGNORE ON

		SET ARITHABORT OFF
		;with selectProdList as (
			SELECT top(100)
				PROD_CNO,
				PROD_GUBN, PROD_E1, PROD_E2, PROD_NOTE, PROD_MODEL, PROD_DANCH, PROD_PLT, PROD_BOX,
				PROD_SNP, PROD_BANGCH, PROD_VNYL, PROD_PAD, PROD_REALJAI, TECH_PATTERN, TECH_SEQ, PROD_CD, PROD_KIJONG, PROD_E3,
				PROD_E4, PROD_PGS, PROD_PGS1, PROD_PGS2, PROD_E5, PROD_DO, PROD_RA, PROD_UPJONG, PROD_APPEAR, PROD_TRANSFORM,
				PROD_REFNO, PROD_PWSNO, PROD_WHADEEP, PROD_FILE, PROD_FAC1, PROD_FAC2, PROD_FAC3, PROD_FAC4, PROD_FAC5,
				PROD_FAC6, PROD_FAC7, PROD_FAC8, PROD_GJ, PROD_BH, PROD_CHISU1N, PROD_CHISU2N, PROD_CHISU3N, PROD_CHISU4N,
				PROD_CHISU5N, PROD_CHISU1S, PROD_CHISU2S, PROD_CHISU3S, PROD_CHISU4S, PROD_CHISU5S, PROD_POLISH, PROD_SI,
				PROD_SI1, PROD_SI2, PROD_SR, PROD_SR1, PROD_SR2, PROD_BOXSU, CORP_NAME2, CORP_NO,
				CORP_TEL, CORP_FAX, CORP_BOSS, CORP_MAST, CORP_UPTE, CORP_UPJO, CORP_ADD, CORP_PLC, CORP_BIGO, CORP_JAN,
				CORP_STRT, CORP_GYUL1, CORP_GYUL2, CORP_GUBN, CORP_BMAN, CORP_HP, CORP_CNO, CORP_PWD, CORP_MAIL, CORP_BUSINESS,
				PRODUCT.TECH_NO, TECH_ROOT, TECH_HT, CORP.CORP_CODE,

				PROD_CODE,
				CONVERT(CHAR(10), PROD_DATE, 23) as PROD_DATE,
				CORP_NAME,
				PROD_NAME,
				PROD_NO,
				PROD_GYU,
				PROD_JAI,
				TECH_TE,
				PROD_DANJ,
				PROD_DANW,
				PROD_DANG,

				CASE
					when PROD_DANW = 'EA' then ( PROD_DANG )
					when PROD_DANW = 'KG' then ( convert(double precision, PROD_DANG) * convert(double precision, PROD_DANJ) )
					end AS PROD_DANG_EA,
				CASE
					when PROD_DANW = 'EA' then ( convert(double precision, PROD_DANG) / convert(double precision, PROD_DANJ) )
					when PROD_DANW = 'KG' then ( PROD_DANG )
					end AS PROD_DANG_KG,
				CASE
					when (PROD_PG1 is not null and PROD_PG1 != '') or (PROD_PG2 is not null and PROD_PG2 != '') /*둘중 하나라도 값이 존재*/
						then
							(
								case
									when (PROD_PG1 is null or PROD_PG1 = '') and (PROD_PG2 is not null or PROD_PG2 != '') /*PG1 값x, PG2 값o*/
										then concat(PROD_PG, ' ', PROD_PG2, ' 이하')
									when (PROD_PG1 is not null or PROD_PG1 != '') and (PROD_PG2 is null or PROD_PG2 = '') /*PG1 값o, PG2 값x*/
										then concat(PROD_PG, ' ', PROD_PG1, ' 이상')
									else concat(PROD_PG, ' ', PROD_PG1, ' ~ ', PROD_PG2)
									end
							)
					else ''
					end as PG_SPEC, /*둘다값이 없음*/
				PROD_PG,
				PROD_PG1,
				PROD_PG2,
				CASE
					when (PROD_GD2 is not null and PROD_GD2 != '') or
						((PROD_GD3 is not null and PROD_GD3 != '') and
						((PROD_GD4 is not null and PROD_GD4 != '') or (PROD_GD5 is not null and PROD_GD5 != '')))
						then
							(
								CASE
									when (PROD_GD4 is null or PROD_GD4 = '')
										then ( concat(PROD_GD1, ' ', PROD_GD2, ' 기준 ', PROD_GD3, ' ', PROD_GD5, ' 이하') )
									when ((PROD_GD5 is null or PROD_GD5 = ''))
										then ( concat(PROD_GD1, ' ', PROD_GD2, ' 기준 ', PROD_GD3, ' ', PROD_GD4, ' 이상') )
									else concat(PROD_GD1, ' ', PROD_GD2, ' 기준 ', PROD_GD3, ' ', PROD_GD4, ' ~ ', PROD_GD5)
									end
							)
					else ''
					end as GD_SPEC,
				PROD_GD1,
				PROD_GD2,
				PROD_GD3,
				PROD_GD4,
				PROD_GD5,
				CASE
					when ( PROD_SG1 is not null and PROD_SG1 != '' ) or ( PROD_SG2 is not null and PROD_SG2 != '' ) /*둘중 하나라도 값이 존재*/
						then
							(
								case
									when ( PROD_SG1 is null or PROD_SG1 = '' ) and ( PROD_SG2 is not null or PROD_SG2 != '' ) /*SG1 값x, SG2 값o*/
										then concat(PROD_SG, ' ', PROD_SG2, ' 이하')
									when ( PROD_SG1 is not null or PROD_SG1 != '' ) and ( PROD_SG2 is null or PROD_SG2 = '' ) /*SG1 값o, SG2 값x*/
										then concat(PROD_SG, ' ', PROD_SG1, ' 이상')
									else concat(PROD_SG, ' ', PROD_SG1, ' ~ ', PROD_SG2)
									end
							)
					else ''
					end as SG_SPEC, /*둘다값이 없음*/
				PROD_SG,
				PROD_SG1,
				PROD_SG2
				FROM PRODUCT
					INNER JOIN CORP		ON PRODUCT.CORP_CODE = CORP.CORP_CODE
					INNER JOIN TECHIN	ON PRODUCT.TECH_NO = TECHIN.TECH_NO
				WHERE 1=1
				and PROD_CODE NOT IN (
						SELECT TOP 100 PROD_CODE
						FROM PRODUCT
							INNER JOIN CORP 	 ON PRODUCT.CORP_CODE = CORP.CORP_CODE
							INNER JOIN TECHIN ON PRODUCT.TECH_NO = TECHIN.TECH_NO
							<if test="CORP_NAME != '' and CORP_NAME != null">
							AND CORP.CORP_NAME 		LIKE + '%' + #{CORP_NAME} + '%'
							</if>
							<if test="PROD_NAME != '' and PROD_NAME != null">
								AND PRODUCT.PROD_NAME 	LIKE + '%' + #{PROD_NAME} + '%'
							</if>
							<if test="PROD_NO != '' and PROD_NO != null">
								AND PRODUCT.PROD_NO 	LIKE + '%' + #{PROD_NO} + '%'
							</if>
							<if test="PROD_GYU != '' and PROD_GYU != null">
								AND PRODUCT.PROD_GYU 	LIKE + '%' + #{PROD_GYU} + '%'
							</if>
							<if test="PROD_JAI != '' and PROD_JAI != null">
								AND PRODUCT.PROD_JAI 	LIKE + '%' + #{PROD_JAI} + '%'
							</if>
							<if test="CORP_BUSINESS != '' and CORP_BUSINESS != null">
								AND CORP.CORP_BUSINESS	LIKE + '%' + #{CORP_BUSINESS} + '%'
							</if>
							<if test="TECH_TE != '' and TECH_TE != null">
								AND TECHIN.TECH_TE		LIKE + '%' + #{TECH_TE} + '%'
							</if>
						ORDER BY PROD_CODE ASC
					)
					<if test="CORP_NAME!='' and CORP_NAME != null">
						AND CORP.CORP_NAME 		LIKE + '%' + #{CORP_NAME} + '%'
					</if>
					<if test="PROD_NAME!='' and PROD_NAME != null">
						AND PRODUCT.PROD_NAME 	LIKE + '%' + #{PROD_NAME} + '%'
					</if>
					<if test="PROD_NO!='' and PROD_NO != null">
						AND PRODUCT.PROD_NO 	LIKE + '%' + #{PROD_NO} + '%'
					</if>
					<if test="PROD_GYU!='' and PROD_GYU != null">
						AND PRODUCT.PROD_GYU 	LIKE + '%' + #{PROD_GYU} + '%'
					</if>
					<if test="PROD_JAI!='' and PROD_JAI != null">
						AND PRODUCT.PROD_JAI 	LIKE + '%' + #{PROD_JAI} + '%'
					</if>
					<if test="CORP_BUSINESS!='' and CORP_BUSINESS != null">
						AND CORP.CORP_BUSINESS	LIKE + '%' + #{CORP_BUSINESS} + '%'
					</if>
					<if test="TECH_TE!='' and TECH_TE != null">
						AND TECHIN.TECH_TE		LIKE + '%' + #{TECH_TE} + '%'
					</if>
				ORDER BY PROD_CODE ASC
		)
		select * from selectProdList
		where 1=1
			<if test="PG_SPEC!='' and PG_SPEC != null">
				and PG_SPEC 		like + '%' + #{PG_SPEC} + '%'
			</if>
			<if test="GD_SPEC!='' and GD_SPEC != null">
				and GD_SPEC 		like + '%' + #{GD_SPEC} + '%'
			</if>
			<if test="SG_SPEC!='' and SG_SPEC != null">
				and SG_SPEC 		like + '%' + #{SG_SPEC} + '%'
			</if>
	</select>
	

</mapper>